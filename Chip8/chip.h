#pragma once

#include "stdint.h"
#include <random>
#include <iostream>
#include <fstream>
#include <string>
#include <vector>

class Chip
{
	std::default_random_engine generator;

	uint8_t memory[4096];
	uint16_t stack[16];
	uint8_t registers[16];
	uint16_t I = 0;
	uint16_t PC = 0x200;
	uint16_t SP = 0;

	uint32_t pixels[64 * 32];

	int width = 64;
	int height = 32;

	uint8_t keys[16]; // key[n] = 1 if is being pressed, 0 otherwise 

	uint8_t delayTimer = 0; 
	uint8_t soundTimer = 0;

	uint8_t fontset[80] =
	{
		0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
		0x20, 0x60, 0x20, 0x20, 0x70, // 1
		0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
		0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
		0x90, 0x90, 0xF0, 0x10, 0x10, // 4
		0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
		0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
		0xF0, 0x10, 0x20, 0x40, 0x40, // 7
		0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
		0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
		0xF0, 0x90, 0xF0, 0x90, 0x90, // a
		0xE0, 0x90, 0xE0, 0x90, 0xE0, // b
		0xF0, 0x80, 0x80, 0x80, 0xF0, // c
		0xE0, 0x90, 0x90, 0x90, 0xE0, // d
		0xF0, 0x80, 0xF0, 0x80, 0xF0, // e
		0xF0, 0x80, 0xF0, 0x80, 0x80  // f
	};

	bool drawFlag = false;
	bool keyPressed = false;
	uint8_t lastPressedKey = 0;

public:
	Chip();
	Chip(const std::string& fileName);

	void loadROM(const std::string& fileName);

	void cycle();

	void pressKey(uint8_t key); // interface for pressing keys
	void releaseKey(uint8_t key); // interface for releasing keys
	
	uint32_t* getPixels();
	bool isDrawing();
};
